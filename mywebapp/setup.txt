turning app into docker image

    buiild docker image
    
        docker build -t streamlit:v1 .

        docker run -it -d -p 8501:8501 --name portfolio-webapp streamlit:v1

    push this docker image to dockerhub

        - go to dockerhub 
        - go to repositories

        in your cli

            docker login

        push image using repo name and image name

        first tag the image: 

            docker tag streamlit:v1 aaabdulkadir/portfolio-webapp 
        
        it will have the repo name aaabdulkadir/portfolio-webapp

        push the image

            docker push aaabdulkadir/portfolio-webapp

        pull image

            docker pull aaabdulkadir/portfolio-webapp

put webapp into kubernetes

    add image to kubernetes deployment yaml file

        minikube start --driver docker

        kubectl apply -f app.yaml

        kubectl get pods

    before starting delete all old atttempts

        - deployment
        - pods
        - service 

        e.g. kubectl get deploy
            kubectl delete deploy {name}

            same with svc

    get service 

        kubectl get svc

           take the nodeport ending i.e. 30000

        get minikube ip

            minikube ip

                ip:30000

    did not work. :(

    forward the port 

        kubectl port-forward {deployment_name} port:port

        kubectl port-forward portfolioapp-deployment-56d955589-trr87  8501:8501

    it worked, but this is using localhost.. how do I go about deploying it?

        - use a load balancer on cloud 

        - change node port to balancer under spec in yaml file

        - get url 

            minikube service portfoliowebapp-service --url

                - do not need to port forward with this, gives working url


How to deploy streamlit website using azure container registry:
https://towardsdatascience.com/deploying-a-streamlit-web-app-with-azure-app-service-1f09a2159743

    login 

        az login

    Next, create a Resource Group to house the Container Registry and 
    the Web App Service that we will create in the following steps

        az group create -l eastus -n mywebapp

    Create a Container Registry under the mywebapp resource group.

        az acr create --name mystreamlitportfoliowebapp --resource-group mywebapp --sku basic --admin-enabled true

    Build the docker image and save to Azure Container Registry

        create .dockerignore to only pull relevant files to azure container

        az acr build --registry mystreamlitportfoliowebapp --resource-group mywebapp --image portfolio-webapp .

    Create an app service plan for web app

        az appservice plan create -g mywebapp -n webappserviceplan -l eastus --is-linux --sku B1

    Create the Azure web app from the docker container in the Container Registry

        az webapp create -g mywebapp -p webappserviceplan -n streamlitwebapp -i mystreamlitportfoliowebapp.azurecr.io/portfolio-app:latest

    again, website did not run.


-----------------------

.streamlit folder to customise app settings

needs to be in same location as main python file

config.toml file needs to be inside .streamlit folder

can configure porting, etc.

TO RUN ON AZURE, CHANGE "The port where the server will listen for browser connections."
TO 8081 as this can be used for azure.

Another way of mapping ports is to create a docker compose file and map the ports
8081:8051


DEPLOYING THE APP TO AZURE...

    Need a container registrty and app service plan